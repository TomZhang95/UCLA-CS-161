net
{
	propagationenginegenerator1791944048146838126L = "edu.ucla.belief.approx.BeliefPropagationSettings@2bf28861";
	recoveryenginegenerator6944530267470113528l = "edu.ucla.util.SettingsImpl@27efd96f";
	node_size = (130 55);
	rcenginegenerator1317510038576835557L = "edu.ucla.belief.inference.RCSettings@2cb26623";
}

node DogBowelTrouble
{
	states = ("Yes" "No" );
	position = (229 -510);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable17";
	label = "DogBowelTrouble";
	excludepolicy = "include whole CPT";
}
node ExpectingGuests
{
	states = ("Yes" "No" );
	position = (664 -516);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable13";
	label = "ExpectingGuests";
	excludepolicy = "include whole CPT";
}
node OutdoorLight
{
	states = ("On" "Off" );
	position = (543 -268);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable9";
	label = "OutdoorLight";
	excludepolicy = "include whole CPT";
}
node DogOutside
{
	states = ("Yes" "No" );
	position = (421 -377);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable16";
	label = "DogOutside";
	excludepolicy = "include whole CPT";
}
node Battery
{
	states = ("OK" "Dead" );
	position = (432 -48);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable21";
	label = "Battery";
	excludepolicy = "include whole CPT";
}
node DogBarking
{
	states = ("Yes" "No" );
	position = (227 -371);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable14";
	label = "DogBarking";
	excludepolicy = "include whole CPT";
}
node FamilyHome
{
	states = ("Yes" "No" );
	position = (452 -514);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable12";
	label = "FamilyHome";
	excludepolicy = "include whole CPT";
}
node LightSensor
{
	states = ("On" "Off" );
	position = (653 -139);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable10";
	label = "LightSensor";
	excludepolicy = "include whole CPT";
}
node LightSensorHealth
{
	states = ("OK" "Broken" );
	position = (766 -267);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable11";
	label = "LightSensorHealth";
	excludepolicy = "include whole CPT";
}
node SoundSensorHealth
{
	states = ("OK" "Broken" );
	position = (104 -263);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable18";
	label = "SoundSensorHealth";
	excludepolicy = "include whole CPT";
}
node SoundSensor
{
	states = ("On" "Off" );
	position = (216 -137);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable19";
	label = "SoundSensor";
	excludepolicy = "include whole CPT";
}
node HearableBarking
{
	states = ("Yes" "No" );
	position = (323 -264);
	diagnosistype = "AUXILIARY";
	DSLxSUBMODEL = "Root Submodel";
	ismapvariable = "false";
	ID = "variable15";
	label = "HearableBarking";
	excludepolicy = "include whole CPT";
}
potential ( DogBowelTrouble | )
{
	data = (	0.5	0.5	);
}
potential ( ExpectingGuests | )
{
	data = (	0.5	0.5	);
}
potential ( OutdoorLight | FamilyHome ExpectingGuests )
{
	data = (((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)));
}
potential ( DogOutside | DogBowelTrouble FamilyHome )
{
	data = (((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)));
}
potential ( Battery | )
{
	data = (	0.5	0.5	);
}
potential ( DogBarking | )
{
	data = (	0.5	0.5	);
}
potential ( FamilyHome | )
{
	data = (	0.5	0.5	);
}
potential ( LightSensor | OutdoorLight LightSensorHealth Battery )
{
	data = ((((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)))
		(((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	))));
}
potential ( LightSensorHealth | )
{
	data = (	0.5	0.5	);
}
potential ( SoundSensorHealth | )
{
	data = (	0.5	0.5	);
}
potential ( SoundSensor | SoundSensorHealth HearableBarking Battery )
{
	data = ((((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)))
		(((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	))));
}
potential ( HearableBarking | DogBarking DogOutside )
{
	data = (((	0.5	0.5	)
		(	0.5	0.5	))
		((	0.5	0.5	)
		(	0.5	0.5	)));
}
